@model TimetableSystem.Models.Request

@{
    ViewBag.Title = "Create Request";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Home/index.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Home/rooms.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/weeks.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        function clearAll() {
            for (var i = 1; i < 16; i++) {
                var cb = '#Week' + i;
                $(cb).prop('checked', false);
            }
        }
        $('#clearAll').click(function () {
            clearAll();
        });
        $('#checkAll').click(function () {
            for (var i = 1; i < 16; i++) {
                var cb = '#Week' + i;
                $(cb).prop('checked', true);
            }
        });
        $('#oneToTwelve').click(function () {
            clearAll();
            for (var i = 1; i < 13; i++) {
                var cb = '#Week' + i;
                $(cb).prop('checked', true);
            }
        });
        $('#checkEven').click(function () {
            clearAll();
            for (var i = 1; i < 16; i++) {
                if (i % 2 == 0) {
                    var cb = '#Week' + i;
                    $(cb).prop('checked', true);
                }
            }
        });
        $('#checkOdd').click(function () {
            clearAll();
            for (var i = 1; i < 16; i++) {
                if (i % 2 == 1) {
                    var cb = '#Week' + i;
                    $(cb).prop('checked', true);
                }
            }
        });
        $(function () {
            $('select#Semester option:last').attr("selected", "selected");
        });
    });
</script>

@if(ViewBag.SelectedRooms != null) {
    <script type="text/javascript">
        var selectedRooms = [
    @foreach (string roomid in ViewBag.SelectedRooms)
    {
        @Html.Raw("'" + roomid + "'")
    }
        ];
    </script>
}

@using (Html.BeginForm()) {
    @Html.ValidationSummary(false)
    @Html.HiddenFor(model => model.RequestId);
    if (ViewBag.Message != null)
    {
        <div class="success-message">
            @ViewBag.Message
        </div>
    }
    
    <fieldset id="s1">
        <h2>
            Booking
            <i id="tick1" class="fa fa-check-square tick"></i>
            <span id="cross1" class="cross show"><i class="fa fa-times" style="position:relative; top:-23px; left:4px; color:#1F2634"></i></span>

        </h2>
        <div class="field">
            <div class="editor-field" style="padding:0 0 0 10px;">
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.Priority)
                    @Html.LabelFor(model => model.Priority)
                    @Html.ValidationMessageFor(model => model.Priority)
                </div>
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.AdHoc)
                    @Html.LabelFor(model => model.AdHoc)
                    @Html.ValidationMessageFor(model => model.AdHoc)
                </div>
            </div>
        </div>
        <div class="field">
                <div class="buttons-wrapper">   <!-- justification not applying for some reason -->
                    @foreach (var day in ViewBag.Days)
                    {
                        @Html.Raw("<div class='greatForm'>")
                        if (day == Model.Day)
                        {
                            @Html.RadioButtonFor(model => model.Day, (String)day, new { id = "test", Checked = "checked" });
                        }
                        else
                        {
                            @Html.RadioButtonFor(model => model.Day, (String)day, new { id = day });
                        }

                        @Html.Label((String)day)
                        @Html.Raw("</div>")
                    }
                </div>
            </div>
            <div class="field">
                <div class="editor-label">
                    @Html.LabelFor(model => model.StartTime)
                    *
                    @Html.ValidationMessageFor(model => model.StartTime)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.StartTime, new SelectList(ViewBag.Times, "Value", "Text"))

                </div>
            </div>
            <div class="field">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Length)
                    *
                    @Html.ValidationMessageFor(model => model.Length)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Length, (SelectList)ViewBag.Lengths)
                </div>
            </div>
    </fieldset>
    <fieldset id="s2">
        <h2>
            Module
            <i id="tick2" class="fa fa-check-square tick"></i>
            <span id="cross2" class="cross show"><i class="fa fa-times" style="position:relative; top:-23px; left:4px; color:#1F2634"></i></span>
        </h2>
        <div class="field">
            <div class="editor-label">
                @Html.Label("Filter Module")
            </div>
            <div class="editor-field">
                <input class="text-box single-line" type="text" id="module-filter" value placeholder="Filter modules..." />
            </div>
        </div>
        <div class="field">
            <div class="editor-label">
                @Html.Label("Module Title")
                *
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.ModuleCode, (SelectList)ViewBag.Modules, "< Select a module by title >")
            </div>
        </div>
        <div class="field">
            <div class="editor-label">
                @Html.Label("Module Code")
                *
            </div>
            <div class="editor-field">
                @Html.DropDownList("ModuleCodes", "< Select a module by code >")
            </div>
        </div>
        <div class="field">
            <div class="editor-label">
                @Html.Label("Semester")
            </div>
            <div class="editor-field">
                    @{ int[] semesters = {1,2};}
                    @Html.DropDownList("Semester", new SelectList(semesters))
            </div>
        </div>
    </fieldset>
    
    <fieldset id="s3">
        <h2>
            Weeks
            <i id="tick3" class="fa fa-check-square tick show"></i>
            <span id="cross3" class="cross hide"><i class="fa fa-times" style="position:relative; top:-23px; left:4px; color:#1F2634"></i></span>
        </h2>
        <div class="field">
            <div class="buttons-wrapper">
				    <button type="button" class="weekButton" id="checkAll">All</button>
				    <button type="button" class="weekButton" id="oneToTwelve">1-12</button>
				    <button type="button" class="weekButton" id="checkOdd">Odd</button>
				    <button type="button" class="weekButton" id="checkEven">Even</button>
				    <button type="button" class="weekButton" id="clearAll">Clear</button>
            </div>
        </div>
        <div class="field">
            <div class="buttons-wrapper greatForm">   <!-- lower whitespace needs removing -->
                @Html.Raw(ViewBag.WeekCheckboxes1)
            </div>
        </div>
        <div class="field">
            <div class="buttons-wrapper greatForm">   <!-- lower whitespace needs removing -->
                @Html.Raw(ViewBag.WeekCheckboxes2)
            </div>
        </div>
        <div class="field">
            <div class="buttons-wrapper greatForm">   <!-- lower whitespace needs removing -->
                @Html.Raw(ViewBag.WeekCheckboxes3)
            </div>
        </div>
    </fieldset>
    
    <fieldset id="s5">
        <h2>
            Room
            <i id="tick4" class="fa fa-minus-square dash show"></i>
        </h2>
        <div class="field">
            <div class="editor-label">
                @Html.LabelFor(model => model.RoomType)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.RoomType, (SelectList)ViewBag.RoomTypes, "< Select a room type >")
            </div>
        </div>
        <div class="field" style="height:14em;">
            <div class="editor-label">
                <p>Features</p>
            </div>
            <div class="editor-field" id="room-features">
                <div class="checkbox-label-container greatForm">
                     @Html.CheckBoxFor(model => model.Projector)
                     @Html.LabelFor(model => model.Projector)               
                </div>
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.Projector2)
                    @Html.LabelFor(model => model.Projector2)
                </div>
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.OHP)
                    @Html.LabelFor(model => model.OHP)
                </div>      
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.Chalkboard)
                    @Html.LabelFor(model => model.Chalkboard)
                </div>
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.BoardArea)
                    @Html.LabelFor(model => model.BoardArea)
                </div>
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.Wheelchair)
                    @Html.LabelFor(model => model.Wheelchair)
                </div>
                <div class="checkbox-label-container greatForm">
                    @Html.EditorFor(model => model.Induction)
                    @Html.LabelFor(model => model.Induction)
                </div>
            </div>
        </div>
        <div class="field">
            <div class="editor-label">
                @Html.LabelFor(model => model.SpecialRequest)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SpecialRequest)
            </div>
        </div>
    </fieldset>
    
    <fieldset id="s6">
        <h2>
            Room Pt. II
            <i id="tick5" class="fa fa-check-square tick"></i>
            <span id="cross5" class="cross show"><i class="fa fa-times" style="position:relative; top:-23px; left:4px; color:#1F2634"></i></span>
        </h2>
        <div class="field">
            <div class="editor-label">
                @Html.LabelFor(model => model.StudentsTotal)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.StudentsTotal)
                @Html.ValidationMessageFor(model => model.StudentsTotal)
            </div>
        </div>
        <div class="field">
            <div class="editor-label">
                @Html.LabelFor(model => model.ParkId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.ParkId, (SelectList)ViewBag.Parks, "< Select a park >", new { id = "Park" })
                @Html.ValidationMessageFor(model => model.ParkId)
            </div>
        </div>
        <div class="field">
            <div class="editor-label">
                @Html.LabelFor(model => model.BuildingId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.BuildingId, (SelectList)ViewBag.Buildings, "< Select a building >", new { id = "buildings" })
                @Html.ValidationMessageFor(model => model.BuildingId)
            </div>
        </div>
        <div class="field">
            <div class="editor-label">
                <label for="park">No. of Rooms: </label>
            </div>
            <div class="editor-field">
                <select id="no_rooms">
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                    <option>6</option>
                </select>
            </div>
        </div>
        <div id="room-container">
        </div>
    </fieldset>
    
    <fieldset id="s7">
    <h2></h2>
        <div class="field">
            <button class="reqButtons">Submit</button>
            <button class="reqButtons" type="button" onclick="if(confirm('Are you sure you wish to reset the form?\nYou will lose all unsaved data.')) { $('Form')[0].reset(); }return false;">Reset</button>
        </div>

    </fieldset>
}